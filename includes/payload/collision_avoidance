<h2 id="collision-avoidance">Collision Avoidance</h2>

<blockquote>
<p>Definition</p>
</blockquote>
<pre class="highlight shell tab-shell"><code><span class="c"># API call described below requires shell access, either login to the device using desktop or use ssh for remote login.</span>

ROS-Service Name: /&lt;namespace&gt;/payload/collision_avoidance_configure
ROS-Service Type: core_api/CollisionAvoidanceConfigure, below is its description

<span class="c">#Request : expects enable_avoidance to enable/disable collision avoidance</span>
<span class="c">#Response : return success=true if command is successfully sent</span>

bool enable_avoidance
---
bool success
string message
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="c1">// C++ API described below can be used in onboard scripts only. For remote scripts you can use http client libraries to call FlytOS REST endpoints from C++.
</span>
<span class="n">Not</span> <span class="n">Implemented</span>
</code></pre><pre class="highlight python tab-python"><code><span class="c"># Python API described below can be used in onboard scripts only. For remote scripts you can use http client libraries to call FlytOS REST endpoints from Python.</span>
<span class="n">Not</span> <span class="n">Implemented</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="c1">// ROS services and topics are accessible from onboard scripts only.
</span>
<span class="n">Type</span><span class="o">:</span> <span class="n">Ros</span> <span class="n">Service</span>
<span class="n">Name</span><span class="o">:</span> <span class="o">/&lt;</span><span class="k">namespace</span><span class="o">&gt;/</span><span class="n">payload</span><span class="o">/</span><span class="n">collision_avoidance_configure</span>
<span class="n">call</span> <span class="n">srv</span><span class="o">:</span>
    <span class="o">:</span><span class="kt">bool</span> <span class="n">enable_avoidance</span>
<span class="n">response</span> <span class="n">srv</span><span class="o">:</span> 
    <span class="o">:</span><span class="kt">bool</span> <span class="n">success</span>
    <span class="o">:</span><span class="n">string</span> <span class="n">message</span>
</code></pre><pre class="highlight python tab-python--ros"><code><span class="c"># ROS services and topics are accessible from onboard scripts only.</span>

<span class="n">Type</span><span class="p">:</span> <span class="n">Ros</span> <span class="n">Service</span>
<span class="n">Name</span><span class="p">:</span> <span class="o">/&lt;</span><span class="n">namespace</span><span class="o">&gt;/</span><span class="n">payload</span><span class="o">/</span><span class="n">collision_avoidance_configure</span>
<span class="n">call</span> <span class="n">srv</span><span class="p">:</span>
    <span class="p">:</span><span class="nb">bool</span> <span class="n">enable_avoidance</span>
<span class="n">response</span> <span class="n">srv</span><span class="p">:</span> 
    <span class="p">:</span><span class="nb">bool</span> <span class="n">success</span>
    <span class="p">:</span><span class="n">string</span> <span class="n">message</span>
</code></pre><pre class="highlight javascript tab-javascript--REST"><code><span class="nx">This</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">REST</span> <span class="nx">call</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">API</span><span class="p">.</span> <span class="nx">Make</span> <span class="nx">sure</span> <span class="nx">to</span> <span class="nx">replace</span> 
    <span class="nx">ip</span><span class="p">:</span> <span class="nx">ip</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">running</span> <span class="nx">device</span>
    <span class="nl">namespace</span><span class="p">:</span> <span class="nx">namespace</span> <span class="nx">used</span> <span class="nx">by</span> <span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">device</span><span class="p">.</span>

<span class="nl">URL</span><span class="p">:</span> <span class="s1">'http://&lt;ip&gt;/ros/&lt;namespace&gt;/payload/collision_avoidance_configure'</span>

<span class="nx">JSON</span> <span class="nx">Request</span><span class="p">:</span>
<span class="p">{</span>
    <span class="nl">enable_avoidance</span><span class="p">:</span> <span class="nb">Boolean</span>
<span class="p">}</span>

<span class="nx">JSON</span> <span class="nx">Response</span><span class="p">:</span>
<span class="p">{</span>
    <span class="nl">success</span><span class="p">:</span> <span class="nb">Boolean</span><span class="p">,</span>
    <span class="nx">message</span><span class="p">:</span> <span class="nb">String</span>
<span class="p">}</span>
</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="nx">This</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">Websocket</span> <span class="nx">call</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">API</span><span class="p">.</span> <span class="nx">Make</span> <span class="nx">sure</span> <span class="nx">you</span> 
<span class="nx">initialise</span> <span class="nx">the</span> <span class="nx">websocket</span> <span class="nx">using</span> <span class="nx">websocket</span> <span class="nx">initialising</span> 
<span class="nx">API</span> <span class="nx">and</span> <span class="nx">replace</span> <span class="nx">namespace</span> <span class="kd">with</span> <span class="nx">the</span> <span class="nx">namespace</span> <span class="nx">of</span> 
<span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">running</span> <span class="nx">device</span> <span class="nx">before</span> <span class="nx">calling</span> <span class="nx">the</span> <span class="nx">API</span> 
<span class="kd">with</span> <span class="nx">websocket</span><span class="p">.</span>

<span class="nl">name</span><span class="p">:</span> <span class="s1">'/&lt;namespace&gt;/payload/collision_avoidance_configure'</span><span class="p">,</span>
<span class="nx">serviceType</span><span class="p">:</span> <span class="s1">'core_api/CollisionAvoidanceConfigure'</span>

<span class="nl">Request</span><span class="p">:</span>
<span class="p">{</span>
    <span class="nl">enable_avoidance</span><span class="p">:</span> <span class="nb">Boolean</span>
<span class="p">}</span>

<span class="nl">Response</span><span class="p">:</span>
<span class="p">{</span>
    <span class="nl">success</span><span class="p">:</span> <span class="nb">Boolean</span><span class="p">,</span>
    <span class="nx">message</span><span class="p">:</span> <span class="nb">String</span>
<span class="p">}</span>
</code></pre>
<blockquote>
<p>Example</p>
</blockquote>
<pre class="highlight shell tab-shell"><code>rosservice call /&lt;namespace&gt;/payload/collision_avoidance_configure <span class="s2">"enable_avoidance: false"</span>
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="n">Not</span> <span class="n">Implemented</span>
</code></pre><pre class="highlight python tab-python"><code><span class="n">Not</span> <span class="n">Implemented</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="n">Not</span> <span class="n">Implemented</span>
</code></pre><pre class="highlight python tab-python--ros"><code><span class="n">Not</span> <span class="n">Implemented</span>
</code></pre><pre class="highlight javascript tab-javascript--REST"><code><span class="kd">var</span>  <span class="nx">msgdata</span><span class="o">=</span><span class="p">{};</span>
<span class="nx">msgdata</span><span class="p">[</span><span class="s2">"enable_avoidance"</span><span class="p">]</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span>

<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
    <span class="na">type</span><span class="p">:</span> <span class="s2">"POST"</span><span class="p">,</span>
    <span class="na">dataType</span><span class="p">:</span> <span class="s2">"json"</span><span class="p">,</span>
    <span class="na">data</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">msgdata</span><span class="p">),</span>
    <span class="na">url</span><span class="p">:</span> <span class="s2">"http://&lt;ip&gt;/ros/&lt;namespace&gt;/payload/collision_avoidance_configure"</span><span class="p">,</span>  
    <span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
           <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">success</span><span class="p">);</span>
           <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">});</span>
</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="kd">var</span> <span class="nx">collision_avoidance_configure</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ROSLIB</span><span class="p">.</span><span class="nx">Service</span><span class="p">({</span>
    <span class="na">ros</span> <span class="p">:</span> <span class="nx">ros</span><span class="p">,</span>
    <span class="na">name</span> <span class="p">:</span> <span class="s1">'/&lt;namespace&gt;/payload/collision_avoidance_configure'</span><span class="p">,</span>
    <span class="na">serviceType</span> <span class="p">:</span> <span class="s1">'core_api/CollisionAvoidanceConfigure'</span>
<span class="p">});</span>

<span class="kd">var</span> <span class="nx">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ROSLIB</span><span class="p">.</span><span class="nx">ServiceRequest</span><span class="p">({</span>
    <span class="na">enable_avoidance</span><span class="p">:</span> <span class="kc">true</span>
<span class="p">});</span>

<span class="nx">collision_avoidance_configure</span><span class="p">.</span><span class="nx">callService</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'Result for service call on '</span>
      <span class="o">+</span> <span class="nx">gimbalSet</span><span class="p">.</span><span class="nx">name</span>
      <span class="o">+</span> <span class="s1">': '</span>
      <span class="o">+</span> <span class="nx">result</span><span class="p">.</span><span class="nx">success</span>
      <span class="o">+</span><span class="s1">': '</span>
      <span class="o">+</span> <span class="nx">result</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span>
<span class="p">});</span>
</code></pre>
<blockquote>
<p>Example response</p>
</blockquote>
<pre class="highlight shell tab-shell"><code>success: <span class="nb">true</span>
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="n">Not</span> <span class="n">Implemented</span>
</code></pre><pre class="highlight python tab-python"><code><span class="n">Not</span> <span class="n">Implemented</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="n">Not</span> <span class="n">Implemented</span>
</code></pre><pre class="highlight python tab-python--ros"><code><span class="n">Not</span> <span class="n">Implemented</span>
</code></pre><pre class="highlight javascript tab-javascript--REST"><code><span class="p">{</span>
    <span class="nl">success</span><span class="p">:</span><span class="nx">True</span>
<span class="p">}</span>
</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="p">{</span>
    <span class="nl">success</span><span class="p">:</span><span class="nx">True</span>
<span class="p">}</span>
</code></pre>
<h3 id="description">Description:</h3>

<p>This API enables/disables collision avoidance system of the DJI drone.</p>

<aside class="warning">
    This API will **ONLY** work with FlytOS mobile app.
</aside>

<h3 id="parameters">Parameters:</h3>

<p>Following parameters are applicable for onboard C++ and Python scripts. Scroll down for their counterparts in RESTful, Websocket, ROS. However the description of these parameters applies to all platforms. </p>

<p>Arguments:</p>

<table><thead>
<tr>
<th>Argument</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>enable_avoidance</td>
<td>boolean</td>
<td>set to True to enable collision avoidance</td>
</tr>
</tbody></table>

<p>Output:</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>success</td>
<td>bool</td>
<td>true if action successful</td>
</tr>
<tr>
<td>message</td>
<td>string</td>
<td>debug message</td>
</tr>
</tbody></table>

<h3 id="ros-endpoint">ROS endpoint:</h3>

<p>Payload APIs in FlytOS are derived from / wrapped around the core services available in ROS. Onboard service clients in rospy / roscpp can call these APIs. Take a look at roscpp and rospy API definition for message structure. </p>

<ul>
<li>Type: <code class="prettyprint">Ros Service</code></li>
<li>Name: <code class="prettyprint">/&lt;namespace&gt;/payload/collision_avoidance_configure</code></li>
<li>Service Type: <code class="prettyprint">core_api/CollisionAvoidanceConfigure</code></li>
</ul>

<h3 id="restful-endpoint">RESTful endpoint:</h3>

<p>FlytOS hosts a RESTful server which listens on port <strong>80</strong>. RESTful APIs can be called from remote platform of your choice.</p>

<ul>
<li>URL: <code class="prettyprint">POST http://&lt;ip&gt;/ros/&lt;namespace&gt;/payload/collision_avoidance_configure</code></li>
<li>JSON Request:
<code class="prettyprint">{
enable_avoidance: Boolean
}</code></li>
<li>JSON Response:
<code class="prettyprint">{
success: Boolean,
message: String
}</code></li>
</ul>

<h3 id="websocket-endpoint">Websocket endpoint:</h3>

<p>Websocket APIs can be called from javascript using <a href="https://github.com/RobotWebTools/roslibjs">roslibjs library</a>.</p>

<p>Java websocket clients are supported using <a href="http://wiki.ros.org/rosjava">rosjava</a>.</p>

<ul>
<li>name: <code class="prettyprint">/&lt;namespace&gt;/payload/collision_avoidance_configure</code></li>
<li>serviceType: <code class="prettyprint">core_api/CollisionAvoidanceConfigure</code></li>
</ul>
